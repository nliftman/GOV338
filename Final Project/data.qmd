---
title: "Collection, Cleaning, and Creation of Final Datasets"
author: "Naomi Liftman"
format: pdf
editor: visual
---

# Load Packages Packages

```{r warning = FALSE, error = FALSE, message = FALSE}
library(incidentally)
library(backbone)
library(smnet)
library(igraph)
library(tidyverse)
library(rio)
library(tidyr)
library(network)
library(gdata)
```

# Collection of Cosponsorship of 117th Senate and House

```{r warning = FALSE, message = FALSE, error = FALSE}
#pull the 117 senators connections 
B_117_senate <- incidence.from.congress(session = 117, types = c("s", "sres", "sjres", "sconres"), areas = c("All"), format = "igraph")

### creates data frame object
el_117_senate <- as.data.frame(as_edgelist(B_117_senate))

#pull the 117 senators connections 
B_117_house <- incidence.from.congress(session = 117, types = c("h", "hres", "hjres", "jconres"), areas = c("All"), format = "igraph")

### creates data frame object
el_117_house <- as.data.frame(as_edgelist(B_117_house))
```

# Mutation of 117th Senate

```{r}
#remove all of ending initials
el_117_senate$V1 <- gsub("(.*)\\s+[A-Z]\\.?$", "\\1", el_117_senate$V1)

#remove the senator title
el_117_senate$V1 <- sub("Sen. ", "", el_117_senate$V1)

#remove everything after the [
el_117_senate$V1 <- gsub("\\[.*","", el_117_senate$V1)

#add new columns with the first and last names
el_117_senate$v1_first <- gsub(".*\\, ", "", el_117_senate$V1)   
el_117_senate$v1_last <- gsub("\\,.*","", el_117_senate$V1)

#adding them together!
edge_117_senate = el_117_senate %>% 
  unite(v1_full, c(v1_first, v1_last), sep = "", remove = FALSE) %>% 
  select(v1_full, V2) %>% 
  rename(bill = V2)
```

# Mutation of 117th HOUSE

```{r}
### creates data frame object
el_117_house <- as.data.frame(as_edgelist(B_117_house))

#remove all of ending initials
el_117_house$V1 <- gsub("(.*)\\s+[A-Z]\\.?$", "\\1", el_117_house$V1)

#remove the senator title
el_117_house$V1 <- sub("Sen. ", "", el_117_house$V1)

#remove everything after the [
el_117_house$V1 <- gsub("\\[.*","", el_117_house$V1)

#add new columns with the first and last names
el_117_house$v1_first <- gsub(".*\\, ", "", el_117_house$V1)   
el_117_house$v1_last <- gsub("\\,.*","", el_117_house$V1)

#adding them together!
edge_117_house = el_117_house %>% 
  unite(v1_full, c(v1_first, v1_last), sep = "", remove = FALSE) %>% 
  select(v1_full, V2) %>% 
  rename(bill = V2)
```

# Creating a Full Dataframe

```{r}
#full 117th dataframe
full_117_edge <- rbind(edge_117_house, edge_117_senate)

#removing Rep.
#remove the senator title
full_117_edge$v1_full <- sub("Rep. ", "", full_117_edge$v1_full)
```

# Fixing all Names of 117th Cosponsorship

```{r}
#god life is a nightmare
full_117_edge[full_117_edge == "John W. Hickenlooper"] <- "John Hickenlooper"
full_117_edge[full_117_edge == "Mark R. Warner"] <- "Mark Warner"
full_117_edge[full_117_edge == "Chuck Grassley"] <- "Charles E. Grassley"
full_117_edge[full_117_edge == "Richard Burr"] <- "Richard M. Burr"
full_117_edge[full_117_edge == "Thomas Tillis"] <- "Thom Tillis"
full_117_edge[full_117_edge == "Roger F. Wicker"] <- "Roger Wicker"
full_117_edge[full_117_edge == "Jr. King"] <- "Angus King"
full_117_edge[full_117_edge == "Mike Crapo"] <- "Michael D. Crapo"
full_117_edge[full_117_edge == "Gary C. Peters"] <- "Gary Peters"
full_117_edge[full_117_edge == "Michael F. Bennet"] <- "Michael Bennet"
full_117_edge[full_117_edge == "Christopher Murphy"] <- "Christopher S. Murphy"
full_117_edge[full_117_edge == "Robert Menendez"] <- "Bob Menendez"
full_117_edge[full_117_edge == "James E. Risch"] <- "Jim Risch"
full_117_edge[full_117_edge == "Kirsten E. Gillibrand"] <- "Kirsten Gillibrand"
full_117_edge[full_117_edge == "Jr. Casey"] <- "Bob Casey"
full_117_edge[full_117_edge == "Christopher A. Coons"] <- "Chris Coons"
full_117_edge[full_117_edge == "Cory A. Booker"] <- "Cory Booker"
full_117_edge[full_117_edge == "Cynthia M. Lummis"] <- "Cynthia Lummis"
full_117_edge[full_117_edge == "Bernard Sanders"] <- "Bernie Sanders"
full_117_edge[full_117_edge == "Susan M. Collins"] <- "Susan Collins"
full_117_edge[full_117_edge == "Margaret Wood Hassan"] <- "Maggie Hassan"
full_117_edge[full_117_edge == "John Sen. Barrasso"] <- "John Barrasso"
full_117_edge[full_117_edge == "Deb Sen. Fischer"] <- "Deb Fischer"
full_117_edge[full_117_edge == "Ted Sen. Cruz"] <- "Ted Cruz"
full_117_edge[full_117_edge == "Roger Sen. Marshall"] <- "Roger Marshall"
full_117_edge[full_117_edge == "Richard Burr"] <- "Richard M. Burr"
full_117_edge[full_117_edge == "Patrick Toomey"] <- "Patrick J. Toomey"
full_117_edge[full_117_edge == "Eric A. \"Rick\" Crawford"] <- "Rick Crawford"
full_117_edge[full_117_edge == "Roger F. Wicker"] <- "Roger Wicker"
full_117_edge[full_117_edge == "William R. Keating"] <- "William Keating"
full_117_edge[full_117_edge == "William R. IV Timmons"] <- "William R. Timmons IV"
full_117_edge[full_117_edge == "W. Gregory Steube"] <- "Greg Steube"
full_117_edge[full_117_edge == "Val Butler Demings"] <- "Val B. Demings"
full_117_edge[full_117_edge == "Troy E. Nehls"] <- "Troy Nehls"
full_117_edge[full_117_edge == "Tony Cárdenas"] <- "Tony Cardenas"
full_117_edge[full_117_edge == "Thomas R. Suozzi"] <- "Tom Suozzi"
full_117_edge[full_117_edge == "Thomas P. Tiffany"] <- "Tom Tiffany"
full_117_edge[full_117_edge == "Theodore E. Deutch"] <- "Ted Deutch"
full_117_edge[full_117_edge == "Suzan K. DelBene"] <- "Suzan DelBene"
full_117_edge[full_117_edge == "Stephanie N. Murphy"] <- "Stephanie Murphy"
full_117_edge[full_117_edge == "Stephanie I. Bice"] <- "Stephanie Bice"
full_117_edge[full_117_edge == "Sr. Weber"] <- "Randy Weber"
full_117_edge[full_117_edge == "Scott H. Peters"] <- "Scott Peters"
full_117_edge[full_117_edge == "Salud O. Carbajal"] <- "Salud Carbajal"
full_117_edge[full_117_edge == "Rosa L. DeLauro"] <- "Rosa DeLauro"
full_117_edge[full_117_edge == "Robin L. Kelly"] <- "Robin Kelly"
full_117_edge[full_117_edge == "Robert J. Wittman"] <- "Rob Wittman"
full_117_edge[full_117_edge == "Kathy E. Manning"] <- "Kathy Manning"
full_117_edge[full_117_edge == "Lee M. Zeldin"] <- "Lee Zeldin"
full_117_edge[full_117_edge == "Linda T. Sánchez"] <- "Linda T. Sanchez"
full_117_edge[full_117_edge == "Lisa C. McClain"] <- "Lisa McClain"
full_117_edge[full_117_edge == "Lloyd Smucker"] <- "Lloyd K. Smucker"
full_117_edge[full_117_edge == "Marc A. Veasey"] <- "Marc Veasey"
full_117_edge[full_117_edge == "Mark E. Amodei"] <- "Mark Amodei"
full_117_edge[full_117_edge == "Mary E. Miller"] <- "Mary Miller"
full_117_edge[full_117_edge == "Matthew M. Rosendale Sr."] <- "Matt Rosendale"
full_117_edge[full_117_edge == "Michael F. Doyle"] <- "Mike Doyle"
full_117_edge[full_117_edge == "Michael K. Simpson"] <- "Mike Simpson"
full_117_edge[full_117_edge == "Michael T. McCaul"] <- "Michael McCaul"
full_117_edge[full_117_edge == "Nanette Diaz Barragan"] <- "Nanette Barragan"
full_117_edge[full_117_edge == "Neal P. Dunn"] <- "Neal Dunn"
full_117_edge[full_117_edge == "Paul A. Gosar"] <- "Paul Gosar"
full_117_edge[full_117_edge == "Raúl M. Grijalva"] <- "Raul M. Grijalva"
full_117_edge[full_117_edge == "Robert C. \"Bobby\" Scott"] <- "Robert C. Scott"
full_117_edge[full_117_edge == "Robert E. Latta"] <- "Robert E. Latta"
full_117_edge[full_117_edge == "Jerry L. Carl"] <- "Jerry Carl"
full_117_edge[full_117_edge == "Jesus G. \"Chuy\" Garcia"] <- "Jesus \"Chuy\" Garcia"
full_117_edge[full_117_edge == "John A. Yarmuth"] <- "John Yarmuth"
full_117_edge[full_117_edge == "John H. Rutherford"] <- "John Rutherford"
full_117_edge[full_117_edge == "John P. Sarbanes"] <- "John Sarbanes"
full_117_edge[full_117_edge == "John R. Carter"] <- "John Carter"
full_117_edge[full_117_edge == "John R. Curtis"] <- "John Curtis"
full_117_edge[full_117_edge == "John R. Moolenaar"] <- "John Moolenaar"
full_117_edge[full_117_edge == "Jr. Beyer"] <- "Donald S. Beyer Jr."
full_117_edge[full_117_edge == "Jr. Bishop"] <- "Sanford D. Bishop Jr."
full_117_edge[full_117_edge == "Jr. Lawson"] <- "Al Lawson"
full_117_edge[full_117_edge == "Jr. Pascrell"] <- "Bill Pascrell Jr."
full_117_edge[full_117_edge == "Jr. Payne"] <- "Donald M. Payne Jr."
full_117_edge[full_117_edge == "Juan Vargas"] <- "Juan C. Vargas"
full_117_edge[full_117_edge == "Kaiali'i Kahele"] <- "Kai Kahele"
full_117_edge[full_117_edge == "Kathleen M. Rice"] <- "Kathleen Rice"
full_117_edge[full_117_edge == "Emanuel Cleaver"] <- "Emanuel Cleaver II"
full_117_edge[full_117_edge == "G. K. Butterfield"] <- "G.K. Butterfield"
full_117_edge[full_117_edge == "Gary J. Palmer"] <- "Gary Palmer"
full_117_edge[full_117_edge == "Glenn Thompson"] <- "Glenn \"GT\" Thompson"
full_117_edge[full_117_edge == "Gregory Murphy"] <- "Greg Murphy"
full_117_edge[full_117_edge == "Gus M. Bilirakis"] <- "Gus Bilirakis"
full_117_edge[full_117_edge == "H. Morgan Griffith"] <- "Morgan Griffith"
full_117_edge[full_117_edge == "Hakeem S. Jeffries"] <- "Hakeem Jeffries"
full_117_edge[full_117_edge == "Haley M. Stevens"] <- "Haley Stevens"
full_117_edge[full_117_edge == "Henry C. \"Hank,\" Jr. Johnson"] <- "Hank Johnson"
full_117_edge[full_117_edge == "IV Ferguson"] <- "Drew Ferguson"
full_117_edge[full_117_edge == "J. French Hill"] <- "French Hill"
full_117_edge[full_117_edge == "J. Luis Correa"] <- "Lou Correa"
full_117_edge[full_117_edge == "James A. Himes"] <- "Jim Himes"
full_117_edge[full_117_edge == "James Comer"] <- "James R. Comer"
full_117_edge[full_117_edge == "James P. McGovern"] <- "Jim McGovern"
full_117_edge[full_117_edge == "James R. Baird"] <- "Jim Baird"
full_117_edge[full_117_edge == "James R. Langevin"] <- "Jim Langevin"
full_117_edge[full_117_edge == "Janice D. Schakowsky"] <- "Jan Schakowsky"
full_117_edge[full_117_edge == "Jared F. Golden"] <- "Jared Golden"
full_117_edge[full_117_edge == "Jefferson Van Drew"] <- "Jeff Van Drew"
full_117_edge[full_117_edge == "Carlos A. Gimenez"] <- "Carlos Gimenez"
full_117_edge[full_117_edge == "Carol D. Miller"] <- "Carol Miller"
full_117_edge[full_117_edge == "Charles J. \"Chuck\" Fleischmann"] <- "Chuck Fleischmann"
full_117_edge[full_117_edge == "Chuck Grassley"] <- "Charles E. Grassley"
full_117_edge[full_117_edge == "Colin Z. Allred"] <- "Colin Allred"
full_117_edge[full_117_edge == "Cynthia Axne"] <- "Cindy Axne"
full_117_edge[full_117_edge == "Dan Crenshaw"] <- "Daniel Crenshaw"
full_117_edge[full_117_edge == "Daniel Meuser"] <- "Dan Meuser"
full_117_edge[full_117_edge == "Daniel T. Kildee"] <- "Daniel Kildee"
full_117_edge[full_117_edge == "Darrell E. Issa"] <- "Darrell Issa"
full_117_edge[full_117_edge == "David G. Valadao"] <- "David Valadao"
full_117_edge[full_117_edge == "David J. Trone"] <- "David Trone"
full_117_edge[full_117_edge == "David N. Cicilline"] <- "David Cicilline"
full_117_edge[full_117_edge == "David P. Joyce"] <- "David Joyce"
full_117_edge[full_117_edge == "Debra A. Haaland"] <- "Debra Haaland"
full_117_edge[full_117_edge == "Doris O. Matsui"] <- "Doris Matsui"
full_117_edge[full_117_edge == "Elaine G. Luria"] <- "Elaine Luria"
full_117_edge[full_117_edge == "Elise M. Stefanik"] <- "Elise Stefanik"
full_117_edge[full_117_edge == "C. Scott Franklin"] <- "Scott Franklin"
full_117_edge[full_117_edge == "C. A. Dutch Ruppersberger"] <- "C.A. Dutch Ruppersberger"
full_117_edge[full_117_edge == "Brian K. Fitzpatrick"] <- "Brian Fitzpatrick"
full_117_edge[full_117_edge == "Brian J. Mast"] <- "Brian Mast"
full_117_edge[full_117_edge == "Brenda L. Lawrence"] <- "Brenda Lawrence"
full_117_edge[full_117_edge == "Bradley Scott Schneider"] <- "Brad Schneider"
full_117_edge[full_117_edge == "Brad R. Wenstrup"] <- "Brad Wenstrup"
full_117_edge[full_117_edge == "Bennie G. Thompson"] <- "Bennie Thompson"
full_117_edge[full_117_edge == "Ayanna Pressley"] <- "Ayanna S. Pressley"
full_117_edge[full_117_edge == "Ann M. Kuster"] <- "Ann McLane Kuster"
full_117_edge[full_117_edge == "Andrew S. Clyde"] <- "Andrew Clyde"
full_117_edge[full_117_edge == "Andrew R. Garbarino"] <- "Andrew Garbarino"
full_117_edge[full_117_edge == "Alma S. Adams"] <- "Alma Adams"
full_117_edge[full_117_edge == "Alexander X. Mooney"] <- "Alex X. Mooney"
full_117_edge[full_117_edge == "Alan S. Lowenthal"] <- "Alan Lowenthal"
full_117_edge[full_117_edge == "Abigail Davis Spanberger"] <- "Abigail Spanberger"
full_117_edge[full_117_edge == "John  Yarmuth"] <- "John Yarmuth"
full_117_edge[full_117_edge == "Lisa Sen. Murkowski"] <- "Lisa Murkowski"
full_117_edge[full_117_edge == "Richard C. Sen. Shelby"] <- "Richard C. Shelby"
full_117_edge[full_117_edge == "Daniel Kildee"] <- "Dan Kildee"
full_117_edge[full_117_edge == "Jr. Pallone"] <- "Frank Pallone Jr."
full_117_edge[full_117_edge == "Debra Haaland"] <- "Deb Haaland"
full_117_edge[full_117_edge == "Robert E. Latta"] <- "Bob Latta"
full_117_edge[full_117_edge == "III Manchin"] <- "Joe Manchin III"
full_117_edge[full_117_edge == "Jesus \"Chuy\" Garcia"] <- "Jesus Garcia"
rel_117[rel_117 == "Jesus \"Chuy\" Garcia"] <- "Jesus Garcia"
full_117_edge[full_117_edge == "Tommy Sen. Tuberville"] <- "Tommy Tuberville"
full_117_edge[full_117_edge == "esus \"Chuy\" Garcia"] <- "Jesus Garcia"

#export it so we can work in a different file
write.csv(full_117_edge, "full_117list.csv", row.names=FALSE)
```

# Mutating Cosponsorship of 117th SENATE

```{r}
#remove all of the ending initials:
el_117_senate$V1 <- gsub("(.*)\\s+[A-Z]\\.?$", "\\1", el_117_senate$V1)
el_117_senate$V2 <- gsub("(.*)\\s+[A-Z]\\.?$", "\\1", el_117_senate$V2)

#remove the senator title from both columns
el_117_senate$V1 <- sub("Sen. ", "", el_117_senate$V1)
el_117_senate$V2 <- sub("Sen. ", "", el_117_senate$V2)

#remove everything after the [
el_117_senate$V1 <- gsub("\\[.*","", el_117_senate$V1)
el_117_senate$V2 <- gsub("\\[.*","", el_117_senate$V2)

#add new columns with the first and last names
el_117_senate$v1_first <- gsub(".*\\, ", "", el_117_senate$V1)   
el_117_senate$v1_last <- gsub("\\,.*","", el_117_senate$V1)
el_117_senate$v2_first <- gsub(".*\\, ", "", el_117_senate$V2)   
el_117_senate$v2_last <- gsub("\\,.*","", el_117_senate$V2) 

#adding them together!
edge_117_senate = el_117_senate %>% 
  unite(v1_full, c(v1_first, v1_last), sep = "", remove = FALSE) %>% 
  unite(v2_full, c(v2_first, v2_last), sep = "", remove = FALSE) %>% 
  select(v1_full, v2_full)
```

# Scott Code for Cosponsorship in 117th HOUSE

```{r warning = FALSE, message = FALSE, error = FALSE}
#pull the 117 senators connections 
B_117_house <- incidence.from.congress(session = 117, types = c("hr", "hres", "hjres", "hconres"), areas = c("All"), format = "igraph")

#this is taking forever to run, not sure why, will check out later
network_117_house <- sdsm(B_117_house, alpha = 0.01, narrative = TRUE)

### creates data frame object
el_117_house <- as.data.frame(as_edgelist(B_117_house))

#again they are all distinct?? and IDK WHY????
el_117_house %>% 
  distinct()
```

# Mutating Cosponsorship of 117th HOUSE

```{r}
#remove the house title from both columns
el_117_house$V1 <- sub("Rep. ", "", el_117_house$V1)
el_117_house$V2 <- sub("Rep. ", "", el_117_house$V2)

#remove everything after the [
el_117_house$V1 <- gsub("\\[.*","", el_117_house$V1)
el_117_house$V2 <- gsub("\\[.*","", el_117_house$V2)

#add new columns with the first and last names
el_117_house$v1_first <- gsub(".*\\, ", "", el_117_house$V1)   
el_117_house$v1_last <- gsub("\\,.*","", el_117_house$V1)
el_117_house$v2_first <- gsub(".*\\, ", "", el_117_house$V2)   
el_117_house$v2_last <- gsub("\\,.*","", el_117_house$V2) 

#remove all middle initials :( but doesnt work :(
el_117_house$v2_first <- gsub("(.*)\\s+[A-Z]\\.?$", "", el_117_house$v2_first)
el_117_house$v1_first <- gsub("(.*)\\s+[A-Z]\\.?$", "", el_117_house$v1_first)

#adding them together!
edge_117_house = el_117_house %>% 
  unite(v1_full, c(v1_first, v1_last), sep = "", remove = FALSE) %>% 
  unite(v2_full, c(v2_first, v2_last), sep = "", remove = FALSE) %>% 
  select(v1_full, v2_full)
```

# MAKING THE FULL EDGE LIST 117th!

```{r}
#full 117th dataframe
full_117_edge <- rbind(edge_117_house, edge_117_senate)

#renaming to get in correct scheme
#dont remove NAs so we can have isolates!
#wait there arnt any NAS naomi you idiot
full_117_edge <- full_117_edge %>% 
  rename("member_i" = 1,
         "member_j" = 2) 

explor <- full_117_edge %>% 
  group_by(member_i, member_j) %>% 
  summarise(n = n())

```

# Exploring 117th total?

```{r}
full_117_edge %>% 
  group_by(member_i) %>% 
  summarize(n = n())

full_117_edge %>% 
  group_by(member_j) %>% 
  summarize(n = n())

ree <- full_117_edge %>% 
  group_by(member_i, member_j) %>% 
  summarize(n = n())

pp <- full_117_edge %>% 
  distinct(member_i, member_j, keep_all = TRUE)
```

# RELIGION FOR 117th

```{r}
#importing the df 
religion_117 <- import("/Users/naomiliftman/Desktop/GOV338/Final Project/117congress.xlsx")

#rename the last five names
relig_117 <- religion_117 %>% 
    rename_with(~ tolower(gsub(".", "", .x, fixed = TRUE))) %>%
  rename("type" = 2) %>% 
  rename("name" = 3) %>% 
  rename("party" = 4 ) %>% 
  rename("cont" = 5) %>% 
  rename("religion" = 6)

#rename the state
names(relig_117)[1] = "state"  

#remove the first row
relig_117 <- relig_117[-c(1:1), ]

#only want their name, relig, and party
relig_117 <- relig_117 %>% 
  select("name", "religion", "party")
```

# Fixing religious data for 117th!

```{r}
#having a look at the origional breakdowns
relig_117 %>% 
  group_by(religion) %>% 
  summarize(n = n())

#creating a new 117
rel_117 <- relig_117 %>% 
  drop_na(name)

pp <- rel_117 %>% 
  group_by(religion) %>% 
  summarize(n = n())

#fix all protestant:
rel_117$fix_relig <- ifelse(rel_117$religion == 'Adventist', 'Protestant', rel_117$religion)
rel_117$fix_relig <- ifelse(rel_117$religion == 'Baptist', 'Protestant', rel_117$fix_relig)
rel_117$fix_relig <- ifelse(rel_117$religion == 'Congregationalist', 'Protestant', rel_117$fix_relig)
rel_117$fix_relig <- ifelse(rel_117$religion == 'Episcopalian', 'Protestant', rel_117$fix_relig)
rel_117$fix_relig <- ifelse(rel_117$religion == 'Lutheran', 'Protestant', rel_117$fix_relig)
rel_117$fix_relig <- ifelse(rel_117$religion == 'Methodist', 'Protestant', rel_117$fix_relig)
rel_117$fix_relig <- ifelse(rel_117$religion == 'Pentecostal', 'Protestant', rel_117$fix_relig)
rel_117$fix_relig <- ifelse(rel_117$religion == 'Pietist', 'Protestant', rel_117$fix_relig)
rel_117$fix_relig <- ifelse(rel_117$religion == 'Presbyterian', 'Protestant', rel_117$fix_relig)
rel_117$fix_relig <- ifelse(rel_117$religion == 'Protestant unspecified', 'Protestant', rel_117$fix_relig)
rel_117$fix_relig <- ifelse(rel_117$religion == 'Reformed', 'Protestant', rel_117$fix_relig)
rel_117$fix_relig <- ifelse(rel_117$religion == 'Restorationist', 'Protestant', rel_117$fix_relig)
rel_117$fix_relig <- ifelse(rel_117$religion == 'Unitarian Universalist', 'Protestant', rel_117$fix_relig)

#fix all general catholic
rel_117$fix_relig <- ifelse(rel_117$religion == 'Orthodox', 'Catholic', rel_117$fix_relig)

#fixing all other
rel_117$fix_relig <- ifelse(rel_117$religion == 'Unaffiliated', 'Other', rel_117$fix_relig)
rel_117$fix_relig <- ifelse(rel_117$religion == 'Buddhist', 'Other', rel_117$fix_relig)
rel_117$fix_relig <- ifelse(rel_117$religion == 'Hindu', 'Other', rel_117$fix_relig)
rel_117$fix_relig <- ifelse(rel_117$religion == 'Mormon', 'Other', rel_117$fix_relig)
rel_117$fix_relig <- ifelse(rel_117$religion == 'Muslim', 'Other', rel_117$fix_relig)
rel_117$fix_relig <- ifelse(rel_117$religion == 'Nondenominational', 'Other', rel_117$fix_relig)

#replacing all of the NAs with Unknown along with the dont know
rel_117$fix_relig <- ifelse(rel_117$religion == 'Don\'t know/refused', 'Unknown', rel_117$fix_relig)
rel_117$fix_relig <- rel_117$fix_relig %>% replace_na('Unknown')


rel_117 %>% 
  group_by(fix_relig) %>% 
  summarize(n = n())

rel_117 <- rel_117 %>% 
  select("name", "fix_relig") %>% 
  drop_na("name")
```

# Fixing all the Incorrect Merges

```{r}
#people who dont exist
# Raphael G. Warnock
# Jon Ossoff
# Alex Padilla
# Shontel M. Brown
#Sheila Cherfilus-McCormick
# Melanie Ann Stansbury
# Brad Finstad
# Mike Flood
# Mike Carey
#Julia Letlow
#Jake Ellzey
#Claudia Tenney
#Brad Finstad
#Alex Padilla

#god life is a nightmare
full_117_edge[full_117_edge == "John W. Hickenlooper"] <- "John Hickenlooper"
full_117_edge[full_117_edge == "Mark R. Warner"] <- "Mark Warner"
full_117_edge[full_117_edge == "Chuck Grassley"] <- "Charles E. Grassley"
full_117_edge[full_117_edge == "Richard Burr"] <- "Richard M. Burr"
full_117_edge[full_117_edge == "Thomas Tillis"] <- "Thom Tillis"
full_117_edge[full_117_edge == "Roger F. Wicker"] <- "Roger Wicker"
full_117_edge[full_117_edge == "Jr. King"] <- "Angus King"
full_117_edge[full_117_edge == "Mike Crapo"] <- "Michael D. Crapo"
full_117_edge[full_117_edge == "Gary C. Peters"] <- "Gary Peters"
full_117_edge[full_117_edge == "Michael F. Bennet"] <- "Michael Bennet"
full_117_edge[full_117_edge == "Christopher Murphy"] <- "Christopher S. Murphy"
full_117_edge[full_117_edge == "Robert Menendez"] <- "Bob Menendez"
full_117_edge[full_117_edge == "James E. Risch"] <- "Jim Risch"
full_117_edge[full_117_edge == "Kirsten E. Gillibrand"] <- "Kirsten Gillibrand"
full_117_edge[full_117_edge == "Jr. Casey"] <- "Bob Casey"
full_117_edge[full_117_edge == "Christopher A. Coons"] <- "Chris Coons"
full_117_edge[full_117_edge == "Cory A. Booker"] <- "Cory Booker"
full_117_edge[full_117_edge == "Cynthia M. Lummis"] <- "Cynthia Lummis"
full_117_edge[full_117_edge == "Bernard Sanders"] <- "Bernie Sanders"
full_117_edge[full_117_edge == "Susan M. Collins"] <- "Susan Collins"
full_117_edge[full_117_edge == "Margaret Wood Hassan"] <- "Maggie Hassan"
full_117_edge[full_117_edge == "John Sen. Barrasso"] <- "John Barrasso"
full_117_edge[full_117_edge == "Deb Sen. Fischer"] <- "Deb Fischer"
full_117_edge[full_117_edge == "Ted Sen. Cruz"] <- "Ted Cruz"
full_117_edge[full_117_edge == "Roger Sen. Marshall"] <- "Roger Marshall"
full_117_edge[full_117_edge == "Richard Burr"] <- "Richard M. Burr"
full_117_edge[full_117_edge == "Patrick Toomey"] <- "Patrick J. Toomey"
full_117_edge[full_117_edge == "Eric A. \"Rick\" Crawford"] <- "Rick Crawford"
full_117_edge[full_117_edge == "Roger F. Wicker"] <- "Roger Wicker"
full_117_edge[full_117_edge == "William R. Keating"] <- "William Keating"
full_117_edge[full_117_edge == "William R. IV Timmons"] <- "William R. Timmons IV"
full_117_edge[full_117_edge == "W. Gregory Steube"] <- "Greg Steube"
full_117_edge[full_117_edge == "Val Butler Demings"] <- "Val B. Demings"
full_117_edge[full_117_edge == "Troy E. Nehls"] <- "Troy Nehls"
full_117_edge[full_117_edge == "Tony Cárdenas"] <- "Tony Cardenas"
full_117_edge[full_117_edge == "Thomas R. Suozzi"] <- "Tom Suozzi"
full_117_edge[full_117_edge == "Thomas P. Tiffany"] <- "Tom Tiffany"
full_117_edge[full_117_edge == "Theodore E. Deutch"] <- "Ted Deutch"
full_117_edge[full_117_edge == "Suzan K. DelBene"] <- "Suzan DelBene"
full_117_edge[full_117_edge == "Stephanie N. Murphy"] <- "Stephanie Murphy"
full_117_edge[full_117_edge == "Stephanie I. Bice"] <- "Stephanie Bice"
full_117_edge[full_117_edge == "Sr. Weber"] <- "Randy Weber"
full_117_edge[full_117_edge == "Scott H. Peters"] <- "Scott Peters"
full_117_edge[full_117_edge == "Salud O. Carbajal"] <- "Salud Carbajal"
full_117_edge[full_117_edge == "Rosa L. DeLauro"] <- "Rosa DeLauro"
full_117_edge[full_117_edge == "Robin L. Kelly"] <- "Robin Kelly"
full_117_edge[full_117_edge == "Robert J. Wittman"] <- "Rob Wittman"
full_117_edge[full_117_edge == "Kathy E. Manning"] <- "Kathy Manning"
full_117_edge[full_117_edge == "Lee M. Zeldin"] <- "Lee Zeldin"
full_117_edge[full_117_edge == "Linda T. Sánchez"] <- "Linda T. Sanchez"
full_117_edge[full_117_edge == "Lisa C. McClain"] <- "Lisa McClain"
full_117_edge[full_117_edge == "Lloyd Smucker"] <- "Lloyd K. Smucker"
full_117_edge[full_117_edge == "Marc A. Veasey"] <- "Marc Veasey"
full_117_edge[full_117_edge == "Mark E. Amodei"] <- "Mark Amodei"
full_117_edge[full_117_edge == "Mary E. Miller"] <- "Mary Miller"
full_117_edge[full_117_edge == "Matthew M. Rosendale Sr."] <- "Matt Rosendale"
full_117_edge[full_117_edge == "Michael F. Doyle"] <- "Mike Doyle"
full_117_edge[full_117_edge == "Michael K. Simpson"] <- "Mike Simpson"
full_117_edge[full_117_edge == "Michael T. McCaul"] <- "Michael McCaul"
full_117_edge[full_117_edge == "Nanette Diaz Barragan"] <- "Nanette Barragan"
full_117_edge[full_117_edge == "Neal P. Dunn"] <- "Neal Dunn"
full_117_edge[full_117_edge == "Paul A. Gosar"] <- "Paul Gosar"
full_117_edge[full_117_edge == "Raúl M. Grijalva"] <- "Raul M. Grijalva"
full_117_edge[full_117_edge == "Robert C. \"Bobby\" Scott"] <- "Robert C. Scott"
full_117_edge[full_117_edge == "Robert E. Latta"] <- "Robert E. Latta"
full_117_edge[full_117_edge == "Jerry L. Carl"] <- "Jerry Carl"
full_117_edge[full_117_edge == "Jesus G. \"Chuy\" Garcia"] <- "Jesus \"Chuy\" Garcia"
full_117_edge[full_117_edge == "John A. Yarmuth"] <- "John Yarmuth"
full_117_edge[full_117_edge == "John H. Rutherford"] <- "John Rutherford"
full_117_edge[full_117_edge == "John P. Sarbanes"] <- "John Sarbanes"
full_117_edge[full_117_edge == "John R. Carter"] <- "John Carter"
full_117_edge[full_117_edge == "John R. Curtis"] <- "John Curtis"
full_117_edge[full_117_edge == "John R. Moolenaar"] <- "John Moolenaar"
full_117_edge[full_117_edge == "Jr. Beyer"] <- "Donald S. Beyer Jr."
full_117_edge[full_117_edge == "Jr. Bishop"] <- "Sanford D. Bishop Jr."
full_117_edge[full_117_edge == "Jr. Lawson"] <- "Al Lawson"
full_117_edge[full_117_edge == "Jr. Pascrell"] <- "Bill Pascrell Jr."
full_117_edge[full_117_edge == "Jr. Payne"] <- "Donald M. Payne Jr."
full_117_edge[full_117_edge == "Juan Vargas"] <- "Juan C. Vargas"
full_117_edge[full_117_edge == "Kaiali'i Kahele"] <- "Kai Kahele"
full_117_edge[full_117_edge == "Kathleen M. Rice"] <- "Kathleen Rice"
full_117_edge[full_117_edge == "Emanuel Cleaver"] <- "Emanuel Cleaver II"
full_117_edge[full_117_edge == "G. K. Butterfield"] <- "G.K. Butterfield"
full_117_edge[full_117_edge == "Gary J. Palmer"] <- "Gary Palmer"
full_117_edge[full_117_edge == "Glenn Thompson"] <- "Glenn \"GT\" Thompson"
full_117_edge[full_117_edge == "Gregory Murphy"] <- "Greg Murphy"
full_117_edge[full_117_edge == "Gus M. Bilirakis"] <- "Gus Bilirakis"
full_117_edge[full_117_edge == "H. Morgan Griffith"] <- "Morgan Griffith"
full_117_edge[full_117_edge == "Hakeem S. Jeffries"] <- "Hakeem Jeffries"
full_117_edge[full_117_edge == "Haley M. Stevens"] <- "Haley Stevens"
full_117_edge[full_117_edge == "Henry C. \"Hank,\" Jr. Johnson"] <- "Hank Johnson"
full_117_edge[full_117_edge == "IV Ferguson"] <- "Drew Ferguson"
full_117_edge[full_117_edge == "J. French Hill"] <- "French Hill"
full_117_edge[full_117_edge == "J. Luis Correa"] <- "Lou Correa"
full_117_edge[full_117_edge == "James A. Himes"] <- "Jim Himes"
full_117_edge[full_117_edge == "James Comer"] <- "James R. Comer"
full_117_edge[full_117_edge == "James P. McGovern"] <- "Jim McGovern"
full_117_edge[full_117_edge == "James R. Baird"] <- "Jim Baird"
full_117_edge[full_117_edge == "James R. Langevin"] <- "Jim Langevin"
full_117_edge[full_117_edge == "Janice D. Schakowsky"] <- "Jan Schakowsky"
full_117_edge[full_117_edge == "Jared F. Golden"] <- "Jared Golden"
full_117_edge[full_117_edge == "Jefferson Van Drew"] <- "Jeff Van Drew"
full_117_edge[full_117_edge == "Carlos A. Gimenez"] <- "Carlos Gimenez"
full_117_edge[full_117_edge == "Carol D. Miller"] <- "Carol Miller"
full_117_edge[full_117_edge == "Charles J. \"Chuck\" Fleischmann"] <- "Chuck Fleischmann"
full_117_edge[full_117_edge == "Chuck Grassley"] <- "Charles E. Grassley"
full_117_edge[full_117_edge == "Colin Z. Allred"] <- "Colin Allred"
full_117_edge[full_117_edge == "Cynthia Axne"] <- "Cindy Axne"
full_117_edge[full_117_edge == "Dan Crenshaw"] <- "Daniel Crenshaw"
full_117_edge[full_117_edge == "Daniel Meuser"] <- "Dan Meuser"
full_117_edge[full_117_edge == "Daniel T. Kildee"] <- "Daniel Kildee"
full_117_edge[full_117_edge == "Darrell E. Issa"] <- "Darrell Issa"
full_117_edge[full_117_edge == "David G. Valadao"] <- "David Valadao"
full_117_edge[full_117_edge == "David J. Trone"] <- "David Trone"
full_117_edge[full_117_edge == "David N. Cicilline"] <- "David Cicilline"
full_117_edge[full_117_edge == "David P. Joyce"] <- "David Joyce"
full_117_edge[full_117_edge == "Debra A. Haaland"] <- "Debra Haaland"
full_117_edge[full_117_edge == "Doris O. Matsui"] <- "Doris Matsui"
full_117_edge[full_117_edge == "Elaine G. Luria"] <- "Elaine Luria"
full_117_edge[full_117_edge == "Elise M. Stefanik"] <- "Elise Stefanik"
full_117_edge[full_117_edge == "C. Scott Franklin"] <- "Scott Franklin"
full_117_edge[full_117_edge == "C. A. Dutch Ruppersberger"] <- "C.A. Dutch Ruppersberger"
full_117_edge[full_117_edge == "Brian K. Fitzpatrick"] <- "Brian Fitzpatrick"
full_117_edge[full_117_edge == "Brian J. Mast"] <- "Brian Mast"
full_117_edge[full_117_edge == "Brenda L. Lawrence"] <- "Brenda Lawrence"
full_117_edge[full_117_edge == "Bradley Scott Schneider"] <- "Brad Schneider"
full_117_edge[full_117_edge == "Brad R. Wenstrup"] <- "Brad Wenstrup"
full_117_edge[full_117_edge == "Bennie G. Thompson"] <- "Bennie Thompson"
full_117_edge[full_117_edge == "Ayanna Pressley"] <- "Ayanna S. Pressley"
full_117_edge[full_117_edge == "Ann M. Kuster"] <- "Ann McLane Kuster"
full_117_edge[full_117_edge == "Andrew S. Clyde"] <- "Andrew Clyde"
full_117_edge[full_117_edge == "Andrew R. Garbarino"] <- "Andrew Garbarino"
full_117_edge[full_117_edge == "Alma S. Adams"] <- "Alma Adams"
full_117_edge[full_117_edge == "Alexander X. Mooney"] <- "Alex X. Mooney"
full_117_edge[full_117_edge == "Alan S. Lowenthal"] <- "Alan Lowenthal"
full_117_edge[full_117_edge == "Abigail Davis Spanberger"] <- "Abigail Spanberger"
full_117_edge[full_117_edge == "John  Yarmuth"] <- "John Yarmuth"
full_117_edge[full_117_edge == "Lisa Sen. Murkowski"] <- "Lisa Murkowski"
full_117_edge[full_117_edge == "Richard C. Sen. Shelby"] <- "Richard C. Shelby"
full_117_edge[full_117_edge == "Daniel Kildee"] <- "Dan Kildee"
full_117_edge[full_117_edge == "Jr. Pallone"] <- "Frank Pallone Jr."
full_117_edge[full_117_edge == "Debra Haaland"] <- "Deb Haaland"
full_117_edge[full_117_edge == "Robert E. Latta"] <- "Bob Latta"
full_117_edge[full_117_edge == "III Manchin"] <- "Joe Manchin III"
full_117_edge[full_117_edge == "Jesus \"Chuy\" Garcia"] <- "Jesus Garcia"
rel_117[rel_117 == "Jesus \"Chuy\" Garcia"] <- "Jesus Garcia"
full_117_edge[full_117_edge == "Tommy Sen. Tuberville"] <- "Tommy Tuberville"
full_117_edge[full_117_edge == "esus \"Chuy\" Garcia"] <- "Jesus Garcia"
```

#okay so we have the 117th edge list and the religion list

```{r}
#okay there should be no NAs
full_117_edge <- full_117_edge %>% 
  drop_na(member_i, member_j)

#merge so now we have religion of member_i
member_i_117 <- full_join(rel_117, full_117_edge, by = c("name" = "member_i"))

#rename them
member_i_117 <- member_i_117 %>% 
  rename("member_i" = "name",
         "religion_i" = "fix_relig")

#now we merge to have religion of member_j
member_i_and_j_117 <- full_join(rel_117, member_i_117, by = c("name" = "member_j"))

#rename them again and remove NAs of religion
member_i_and_j_117 <- member_i_and_j_117 %>% 
  rename("member_j" = "name",
         "religion_j" = "fix_relig") %>% 
  drop_na(religion_j, religion_i)

```

# YAY! Now we wanna turn it into a matrix that we can create a CSV for!!!

# NOW THAT WE HAVE THE EDGE LISTS we need to make a MATRIX of 117

```{r}
#now we just want the member names
a_117 <- member_i_and_j_117 %>% 
  select(member_i, member_j)

a_117 %>% 
  distinct()

#now we need to add in isolates since our adjacency only includes 531 members and our religion includes 538

#the no duplicates of i there are only 517
noDup_i <- a_117 %>% 
  select(member_i) %>% 
  distinct(member_i, .keep_all = TRUE)

#the no duplicates of j there are only 517
noDup_j <- a_117 %>% 
  select(member_j) %>% 
  distinct(member_j, .keep_all = TRUE)
```

# check my isos n stuff

```{r}
#checking isolates that need to be added back to 112th
i <- anti_join(rel_117, noDup_i, by = c("name" = "member_i"))
#there are 7 isolates of the i column

#checking isolates that need to be added back
j <- anti_join(rel_117, noDup_j, by = c("name" = "member_j"))
#there are 7 isolates of the j column as well 
```

```{r}
#adding the new isos of i
newrow_1 = c(member_i = "Mark Kelly", member_j = NA)
newrow_2 = c(member_i = "Kamala Harris", member_j = NA)
newrow_3 = c(member_i = "Rand Paul", member_j = NA)
newrow_4 = c(member_i = "Cedric L. Richmond", member_j = NA)
newrow_5 = c(member_i = "Sam Graves", member_j = NA)
newrow_6 = c(member_i = "Joe Manchin III", member_j = NA)
newrow_7 = c(member_i = "Lisa Murkowski", member_j = NA)

#adding all the isos of J
newrow_8 = c(member_i = NA, member_j = "Ted Lieu")
newrow_9 = c(member_i = NA, member_j = "Kamala Harris")
newrow_10 = c(member_i = NA, member_j = "Jody B. Hice")
newrow_11 = c(member_i = NA, member_j = "Todd Young")
newrow_12 = c(member_i = NA, member_j = "Cedric L. Richmond")
newrow_13 = c(member_i = NA, member_j = "Maggie Hassan")
newrow_14 = c(member_i = NA, member_j = "Charles E. Schumer")


#adding them
a_117 = rbind(a_117, newrow_1)
a_117 = rbind(a_117, newrow_2)
a_117 = rbind(a_117, newrow_3)
a_117 = rbind(a_117, newrow_4)
a_117 = rbind(a_117, newrow_5)
a_117 = rbind(a_117, newrow_6)
a_117 = rbind(a_117, newrow_7)
a_117 = rbind(a_117, newrow_8)
a_117 = rbind(a_117, newrow_9)
a_117 = rbind(a_117, newrow_10)
a_117 = rbind(a_117, newrow_11)
a_117 = rbind(a_117, newrow_12)
a_117 = rbind(a_117, newrow_13)
a_117 = rbind(a_117, newrow_14)


```

# FINAL EDGE LIST TURNED TO MATRIX 117

```{r}
#now we need to turn our edge list into a weighted edge list
#turn edge list into matrix
el_117=as.matrix(a_117)

#turn into graph object
g_117=graph.data.frame(el_117)

#get adjacency matrix
d_117 = get.adjacency(g_117,sparse=FALSE)
d_117 <- d_117[-c(532), -c(532)]

#export it for easier work!
write.csv(d_117, "adjacency_cospons_117.csv", row.names=FALSE)
```

# Religion 117th congress

```{r}
#make matrix of religions
#making a number correlation for each lmao
re_117 <- rel_117 %>% 
  mutate(fix_relig = ifelse(rel_117$fix_relig == "Catholic", 1, fix_relig),
         fix_relig = ifelse(rel_117$fix_relig == "Jewish", 2, fix_relig),
         fix_relig = ifelse(rel_117$fix_relig == "Other", 3, fix_relig),
         fix_relig = ifelse(rel_117$fix_relig == "Protestant", 4, fix_relig),
         fix_relig = ifelse(rel_117$fix_relig == "Unknown", 5, fix_relig))  

#making an i and j 
re_117 <- re_117 %>% 
  mutate(member_i = name) %>% 
  rename(member_j = name ) %>% 
  mutate(religion_i = fix_relig) %>% 
  rename(religion_j = fix_relig)

#creating all the possible combinations
combos_117 <- re_117 |>
  expand(member_i, member_j) |>
  filter(member_i != member_j) 

#merge back in religion
combos_rel_117 <- combos_117 %>% 
  right_join(re_117, by = c("member_i" = "member_i")) %>% 
  select(member_i, member_j.x, religion_i)

#merge religion of j
combos_rel_117 <- combos_rel_117 %>% 
  right_join(re_117, by = c("member_j.x" = "member_j")) 

#select the correct ones
combos_117_part_two_electric_boogaloo <- combos_rel_117 %>% 
  select(member_i.x, member_j.x, religion_i.x, religion_j) %>% 
  rename(member_i =member_i.x,
         member_j = member_j.x,
         religion_i = religion_i.x)

#create similarity score
combos_117_part_two_electric_boogaloo <- combos_117_part_two_electric_boogaloo %>% 
  mutate(similarity = ifelse(religion_i == religion_j, 1, 0 )) %>% 
  select(-religion_i, -religion_j)

#now we only want to include the ones that include the same? 
sim_combos_117 <-combos_117_part_two_electric_boogaloo[!combos_117_part_two_electric_boogaloo$similarity==0 ,]

#turn into graph object
g_117=graph.data.frame(sim_combos_117)

#get adjacency matrix
d_117 = get.adjacency(g_117,sparse=FALSE) 

#export it for easier work!
write.csv(d_117, "matrix_religion_117.csv", row.names=FALSE)
```

# This doesnt include isos reee

```{r}
#export 117th 
write.csv(a_117, "edge_all_117.csv", row.names=TRUE)
```

# Matrix for Party 117th

```{r}
#selecting only name and party
party_117 <- relig_117 %>% 
  drop_na(religion) %>% 
  select(name, party)

#mutating so rep = 1 and dem = 0 with the independents being lowkey democrats of 
#angus king and bernie so yeah
party_117 <- party_117 %>% 
  mutate(party = ifelse(party == "R", 1, 0))

#making an i and j 
p_117 <- party_117 %>% 
  mutate(member_i=name) %>% 
  rename(member_j = name) %>% 
  mutate(party_i = party) %>% 
  rename(party_j = party)

#creating all the possible combinations
pcombos <- p_117 |>
  expand(member_i, member_j) |>
  filter(member_i != member_j) 

#merge back in religion
pcombos_117 <- pcombos %>% 
  full_join(p_117, by = c("member_i" = "member_i"))%>% 
  select(member_i, member_j.x, party_j)

#merge religion of j
pcombos_117 <- pcombos_117 %>% 
  right_join(p_117, by = c("member_j.x" = "member_j")) 

#select the correct ones
pcombos_117 <- pcombos_117 %>% 
  select(member_i.x, member_j.x, party_j.x, party_i) %>% 
  rename(member_i = member_i.x,
         member_j = member_j.x,
         party_j = party_j.x)

#create similarity score
pcombos_117 <- pcombos_117 %>% 
  mutate(similarity = ifelse(party_i == party_j, 1, 0 )) %>% 
  select(-party_i, -party_j)

#now we only want to include the ones that include the same? 
p_sim_combos_117 <-pcombos_117[!pcombos_117$similarity==0 ,]

#turn into graph object
p_g_117=graph.data.frame(p_sim_combos_117)

#get adjacency matrix
pd_117 = get.adjacency(p_g_117,sparse=FALSE) 

#export it for easier work!
write.csv(pd_117, "matrix_party_117.csv", row.names=FALSE)
```

# Scott Code for Cosponsorship of 112th SENATE

```{r warning = FALSE, message = FALSE, error = FALSE}
#pull the 117 congress connections 
B_112_senate <- incidence.from.congress(session = 112, types = c("s", "sres", "sjres", "sconres"), areas = c("All"), format = "igraph")

network_112_senate <- sdsm(B_112_senate, alpha = 0.01, narrative = TRUE)

## Creates matrix object (not adjacency matrix)
el_mat_112_senate <- as_edgelist(network_112_senate)

### creates data frame object
el_112_senate <- as.data.frame(as_edgelist(network_112_senate))

el_112_senate %>% 
  distinct()

```

# Mutating Cosponsorship of 112th SENATE

```{r}
#remove the senator title from both columns
el_112_senate$V1 <- sub("Sen. ", "", el_112_senate$V1)
el_112_senate$V2 <- sub("Sen. ", "", el_112_senate$V2)

#remove everything after the [
el_112_senate$V1 <- gsub("\\[.*","", el_112_senate$V1)
el_112_senate$V2 <- gsub("\\[.*","", el_112_senate$V2)

#add new columns with the first and last names
el_112_senate$v1_first <- gsub(".*\\, ", "", el_112_senate$V1)   
el_112_senate$v1_last <- gsub("\\,.*","", el_112_senate$V1)
el_112_senate$v2_first <- gsub(".*\\, ", "", el_112_senate$V2)   
el_112_senate$v2_last <- gsub("\\,.*","", el_112_senate$V2) 

#adding them together!
edge_112_senate = el_112_senate %>% 
  unite(v1_full, c(v1_first, v1_last), sep = "", remove = FALSE) %>% 
  unite(v2_full, c(v2_first, v2_last), sep = "", remove = FALSE) %>% 
  select(v1_full, v2_full)
```

# Scott Code for Cosponsorship in the 112th HOUSE

```{r warning = FALSE, message = FALSE, error = FALSE}
#pull the 117 senators connections 
B_112_house <- incidence.from.congress(session = 112, types = c("hr", "hres", "hjres", "hconres"), areas = c("All"), format = "igraph")

#this is taking forever to run, not sure why, will check out later
network_112_house <- sdsm(B_112_house, alpha = 0.01, narrative = TRUE)

## Creates matrix object (note adjacency matrix)
el_mat_112_house <- as_edgelist(network_112_house)

### creates data frame object
el_112_house <- as.data.frame(as_edgelist(network_112_house))

el_112_house %>% 
  distinct()
```

# Mutating Cosponsorship of 112th HOUSE

```{r}
#remove the house title from both columns
el_112_house$V1 <- sub("Rep. ", "", el_112_house$V1)
el_112_house$V2 <- sub("Rep. ", "", el_112_house$V2)

#remove everything after the [
el_112_house$V1 <- gsub("\\[.*","", el_112_house$V1)
el_112_house$V2 <- gsub("\\[.*","", el_112_house$V2)

#add new columns with the first and last names
el_112_house$v1_first <- gsub(".*\\, ", "", el_112_house$V1)   
el_112_house$v1_last <- gsub("\\,.*","", el_112_house$V1)
el_112_house$v2_first <- gsub(".*\\, ", "", el_112_house$V2)   
el_112_house$v2_last <- gsub("\\,.*","", el_112_house$V2) 

#adding them together!
edge_112_house = el_112_house %>% 
  unite(v1_full, c(v1_first, v1_last), sep = "", remove = FALSE) %>% 
  unite(v2_full, c(v2_first, v2_last), sep = "", remove = FALSE) %>% 
  select(v1_full, v2_full)
```

# BUILDING FULL 112th

```{r}
#full 117th dataframe
full_112_edge <- rbind(edge_112_house, edge_112_senate)

#renaming to get in correct scheme
full_112_edge <- full_112_edge %>% 
  rename("member_i" = 1,
         "member_j" = 2)

full_112_edge %>% 
  distinct()

```

# Religion Data 112th

```{r}
#importing the df 
religion_112 <- import("/Users/naomiliftman/Desktop/GOV338/Final Project/112congress.xlsx") 

#rename the last five names
relig_112 <- religion_112 %>% 
  rename_with(~ tolower(gsub(".", "", .x, fixed = TRUE))) %>% 
  rename("member_name" = 2) %>% 
  rename("religious_affiliation" = 4 ) %>% 
  select("member_name", "religious_affiliation", "party")

#now need to add the senate! 
religion_112_senate <- import("/Users/naomiliftman/Desktop/GOV338/Final Project/112congress_senators.xlsx")

#rename the ones we are gonna use
relig_112_sen <- religion_112_senate %>% 
  rename("member_name" = 2) %>% 
  rename("religious_affiliation" = 3,
         "party" = 4) %>% 
  select("member_name", "religious_affiliation", "party")

```

# Fixing religious data for 112!!

```{r}
#now making just one religion 
relig_112_all <- rbind(relig_112_sen, relig_112) %>% 
  drop_na(religious_affiliation)

#how many religions origionally
relig_112_all %>% 
  group_by(religious_affiliation) %>% 
  summarize(n = n())

rel_112 <- relig_112_all

#fix all other
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Quaker', 'Other', rel_112$religious_affiliation)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Nazarene', 'Other', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Greek Orthodox', 'Other', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Mormon', 'Other', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Buddhist', 'Other', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Muslim', 'Other', rel_112$fix_relig)

#fixing all catholic
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Anglican', 'Catholic', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Anglican Catholic', 'Catholic', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Roman Catholic', 'Catholic', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Unitarian', 'Catholic', rel_112$fix_relig)

#fixing all protestant
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'African Methodist Episcopal', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Evangelical Methodist', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'United Methodist', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Methodist', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Christian', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Christian non-denominational', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Christian Reformed', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Christian Scientist', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Church of Christ', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Antioch Orthodox Christian Church', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Eastern Orthodox', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Evangelical Christian', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Southern Baptist', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Baptist', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Episcopalian', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Presbyterian', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Lutheran', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Lutheran - Missouri Synod', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Evangelical Lutheran', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Seventh-day Adventist', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Community of Christ', 'Protestant', rel_112$fix_relig)
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Congregationalist Baptist', 'Protestant', rel_112$fix_relig)

rel_112[rel_112 == "Christian Reformed Church"] <- "Protestant"
rel_112[rel_112 == "Church of God"] <- "Protestant"
rel_112[rel_112 == "Congregationalist"] <- "Protestant"


#replace all NAs with unknown
rel_112$fix_relig <- ifelse(rel_112$religious_affiliation == 'Unspecified', 'Unknown', rel_112$fix_relig)
rel_112$fix_relig <- rel_112$fix_relig %>% replace_na('Unknown')

#how many different religions there are now!
rel_112 %>% 
  group_by(fix_relig) %>% 
  summarize(n = n())

#remove NAs
rel_112 <- rel_112 %>% 
  select("member_name", "fix_relig") %>%
  drop_na(member_name)
```

# Fixing all the Incorrect Missmaches 112!

```{r}
full_112_edge <- full_112_edge %>% 
  mutate(member_i = ifelse(full_112_edge$member_i == "Wm. Lacy Clay", "William Lacy Clay", member_i),
         member_j = ifelse(full_112_edge$member_j == "Wm. Lacy Clay", "William Lacy Clay", member_j),
         member_i = ifelse(full_112_edge$member_i == "W. Todd Akin", "Todd Akin", member_i),
         member_j = ifelse(full_112_edge$member_j == "W. Todd Akin", "Todd Akin", member_j),
         member_i = ifelse(full_112_edge$member_i == "William R. Keating", "William Keating", member_i),
         member_j = ifelse(full_112_edge$member_j == "William R. Keating", "William Keating", member_j),
         member_i = ifelse(full_112_edge$member_i == "William L. Owens", "Bill  Owens", member_i),
         member_j = ifelse(full_112_edge$member_j == "William L. Owens", "Bill  Owens", member_j),
         member_i = ifelse(full_112_edge$member_i == "Thomas E. Petri", "Tom Petri", member_i),
         member_j = ifelse(full_112_edge$member_j == "Thomas E. Petri", "Tom Petri", member_j),
         member_i = ifelse(full_112_edge$member_i == "Theodore E. Deutch", "Ted Deutch", member_i),
         member_j = ifelse(full_112_edge$member_j == "Theodore E. Deutch", "Ted Deutch", member_j),
         member_i = ifelse(full_112_edge$member_i == "Thaddeus G. McCotter", "Thaddeus McCotter", member_i),
         member_j = ifelse(full_112_edge$member_j == "Thaddeus G. McCotter", "Thaddeus McCotter", member_j),
         member_i = ifelse(full_112_edge$member_i == "Susan M. Collins", "Susan Collins", member_i),
         member_j = ifelse(full_112_edge$member_j == "Susan M. Collins", "Susan Collins", member_j),
         member_i = ifelse(full_112_edge$member_i == "Sue Wilkins Myrick", "Sue Myrick", member_i),
         member_j = ifelse(full_112_edge$member_j == "Sue Wilkins Myrick", "Sue Myrick", member_j),
         member_i = ifelse(full_112_edge$member_i == "Steven M. Palazzo", "Steven Palazzo", member_i),
         member_j = ifelse(full_112_edge$member_j == "Steven M. Palazzo", "Steven Palazzo", member_j),
         member_i = ifelse(full_112_edge$member_i == "Steve II Southerland", "Steve Southerland", member_i),
         member_j = ifelse(full_112_edge$member_j == "Steve II Southerland", "Steve Southerland", member_j),
         member_i = ifelse(full_112_edge$member_i == "Stephen Lee Fincher", "Stephen Fincher", member_i),
         member_j = ifelse(full_112_edge$member_j == "Stephen Lee Fincher", "Stephen Fincher", member_j),
         member_i = ifelse(full_112_edge$member_i == "Scott  R. Tipton", "Scott Tipton", member_i),
         member_j = ifelse(full_112_edge$member_j == "Scott  R. Tipton", "Scott Tipton", member_j),
         member_i = ifelse(full_112_edge$member_i == "Rosa L. DeLauro", "Rosa DeLauro", member_i),
         member_j = ifelse(full_112_edge$member_j == "Rosa L. DeLauro", "Rosa DeLauro", member_j),
         member_i = ifelse(full_112_edge$member_i == "Rodney P. Frelinghuysen", "Rodney Frelinghuysen", member_i),
         member_j = ifelse(full_112_edge$member_j == "Rodney P. Frelinghuysen", "Rodney Frelinghuysen", member_j),
         member_i = ifelse(full_112_edge$member_i == "Robert T. Schilling", "Bobby Schilling", member_i),
         member_j = ifelse(full_112_edge$member_j == "Robert T. Schilling", "Bobby Schilling", member_j),
         member_i = ifelse(full_112_edge$member_i == "Robert J. Wittman", "Rob Wittman", member_i),
         member_j = ifelse(full_112_edge$member_j == "Robert J. Wittman", "Rob Wittman", member_j),
         member_i = ifelse(full_112_edge$member_i == "Robert J. Dold", "Robert Dold", member_i),
         member_j = ifelse(full_112_edge$member_j == "Robert J. Dold", "Robert Dold", member_j),
         member_i = ifelse(full_112_edge$member_i == "Robert E. Latta", "Bob Latta", member_i),
         member_j = ifelse(full_112_edge$member_j == "Robert E. Latta", "Bob Latta", member_j),
         member_i = ifelse(full_112_edge$member_i == "Robert C. \"Bobby\" Scott", "Robert C. Scott", member_i),
         member_j = ifelse(full_112_edge$member_j == "Robert C. \"Bobby\" Scott", "Robert C. Scott", member_j),
         member_i = ifelse(full_112_edge$member_i == "Richard L. Hanna", "Richard Hanna", member_i),
         member_j = ifelse(full_112_edge$member_j == "Richard L. Hanna", "Richard Hanna", member_j),
         member_i = ifelse(full_112_edge$member_i == "Richard B. Nugent", "Richard Nugent", member_i),
         member_j = ifelse(full_112_edge$member_j == "Richard B. Nugent", "Richard Nugent", member_j),
         member_i = ifelse(full_112_edge$member_i == "Renee L. Ellmers", "Renee Ellmers", member_i),
         member_j = ifelse(full_112_edge$member_j == "Renee L. Ellmers", "Renee Ellmers", member_j),
         member_i = ifelse(full_112_edge$member_i == "Reid J. Ribble", "Reid Ribble", member_i),
         member_j = ifelse(full_112_edge$member_j == "Reid J. Ribble", "Reid Ribble", member_j),
         member_i = ifelse(full_112_edge$member_i == "Raúl M. Grijalva", "Raul Grijalva", member_i),
         member_j = ifelse(full_112_edge$member_j == "Raúl M. Grijalva", "Raul Grijalva", member_j),
         member_i = ifelse(full_112_edge$member_i == "Peter J. Roskam", "Peter Roskam", member_i),
         member_j = ifelse(full_112_edge$member_j == "Peter J. Roskam", "Peter Roskam", member_j),
         member_i = ifelse(full_112_edge$member_i == "Paul C. Broun", "Paul Broun", member_i),
         member_j = ifelse(full_112_edge$member_j == "Paul C. Broun", "Paul Broun", member_j),
         member_i = ifelse(full_112_edge$member_i == "Paul A. Gosar", "Paul Gosar", member_i),
         member_j = ifelse(full_112_edge$member_j == "Paul A. Gosar", "Paul Gosar", member_j),
         member_i = ifelse(full_112_edge$member_i == "Patrick J. Tiberi", "Pat Tiberi", member_i),
         member_j = ifelse(full_112_edge$member_j == "Patrick J. Tiberi", "Pat Tiberi", member_j),
         member_i = ifelse(full_112_edge$member_i == "Norman D. Dicks", "Norm Dicks", member_i),
         member_j = ifelse(full_112_edge$member_j == "Norman D. Dicks", "Norm Dicks", member_j),
         member_i = ifelse(full_112_edge$member_i == "Nan A. S. Hayworth", "Nan Hayworth", member_i),
         member_j = ifelse(full_112_edge$member_j == "Nan A. S. Hayworth", "Nan Hayworth", member_j),
         member_i = ifelse(full_112_edge$member_i == "Mike J. Rogers", "Mike Rogers", member_i),
         member_j = ifelse(full_112_edge$member_j == "Mike J. Rogers", "Mike Rogers", member_j),
         member_i = ifelse(full_112_edge$member_i == "Michael T. McCaul", "Michael McCaul", member_i),
         member_j = ifelse(full_112_edge$member_j == "Michael T. McCaul", "Michael McCaul", member_j),
         member_i = ifelse(full_112_edge$member_i == "Michael K. Simpson", "Mike Simpson", member_i),
         member_j = ifelse(full_112_edge$member_j == "Michael K. Simpson", "Mike Simpson", member_j),
         member_i = ifelse(full_112_edge$member_i == "Michael G. Grimm", "Michael Grimm", member_i),
         member_j = ifelse(full_112_edge$member_j == "Michael G. Grimm", "Michael Grimm", member_j),
         member_i = ifelse(full_112_edge$member_i == "Michael F. Doyle", "Mike Doyle", member_i),
         member_j = ifelse(full_112_edge$member_j == "Michael F. Doyle", "Mike Doyle", member_j),
         member_i = ifelse(full_112_edge$member_i == "Melvin L. Watt", "Melvin Watt", member_i),
         member_j = ifelse(full_112_edge$member_j == "Melvin L. Watt", "Melvin Watt", member_j),
         member_i = ifelse(full_112_edge$member_i == "Marlin A. Stutzman", "Marlin Stutzman", member_i),
         member_j = ifelse(full_112_edge$member_j == "Marlin A. Stutzman", "Marlin Stutzman", member_j),
         member_i = ifelse(full_112_edge$member_i == "Mark S. Critz", "Mark Critz", member_i),
         member_j = ifelse(full_112_edge$member_j == "Mark S. Critz", "Mark Critz", member_j),
         member_i = ifelse(full_112_edge$member_i == "Lynn C. Woolsey", "Lynn Woolsey", member_i),
         member_j = ifelse(full_112_edge$member_j == "Lynn C. Woolsey", "Lynn Woolsey", member_j),
         member_i = ifelse(full_112_edge$member_i == "Lynn A. Westmoreland", "Lynn Westmoreland", member_i),
         member_j = ifelse(full_112_edge$member_j == "Lynn A. Westmoreland", "Lynn Westmoreland", member_j),
         member_i = ifelse(full_112_edge$member_i == "Louise McIntosh Slaughter", "Louise M. Slaughter", member_i),
         member_j = ifelse(full_112_edge$member_j == "Louise McIntosh Slaughter", "Louise M. Slaughter", member_j),
         member_i = ifelse(full_112_edge$member_i == "Linda T. Sánchez", "Linda T. Sanchez", member_i),
         member_j = ifelse(full_112_edge$member_j == "Linda T. Sánchez", "Linda T. Sanchez", member_j),
         member_i = ifelse(full_112_edge$member_i == "Kristi L. Noem", "Kristi Noem", member_i),
         member_j = ifelse(full_112_edge$member_j == "Kristi L. Noem", "Kristi Noem", member_j),
         member_i = ifelse(full_112_edge$member_i == "Jr. Sensenbrenner", "F. James Sensenbrenner Jr.", member_i),
         member_j = ifelse(full_112_edge$member_j == "Jr. Sensenbrenner", "F. James Sensenbrenner Jr.", member_j),
         member_i = ifelse(full_112_edge$member_i == "Jr. Pascrell", "Bill Pascrell Jr.", member_i),
         member_j = ifelse(full_112_edge$member_j == "Jr. Pascrell", "Bill Pascrell Jr.", member_j),
         member_i = ifelse(full_112_edge$member_i == "Jr. Pallone", "Frank Pallone Jr.", member_i),
         member_j = ifelse(full_112_edge$member_j == "Jr. Pallone", "Frank Pallone Jr.", member_j),
         member_i = ifelse(full_112_edge$member_i == "Jr. Jackson", "Jesse L. Jackson Jr.", member_i),
         member_j = ifelse(full_112_edge$member_j == "Jr. Jackson", "Jesse L. Jackson Jr.", member_j),
         member_i = ifelse(full_112_edge$member_i == "Jr. Duncan", "John J. \"Jimmy\" Duncan Jr.", member_i),
         member_j = ifelse(full_112_edge$member_j == "Jr. Duncan", "John J. \"Jimmy\" Duncan Jr.", member_j),
         member_i = ifelse(full_112_edge$member_i == "Jr. Conyers", "John Conyers Jr.", member_i),
         member_j = ifelse(full_112_edge$member_j == "Jr. Conyers", "John Conyers Jr.", member_j),
         member_i = ifelse(full_112_edge$member_i == "Jr. Carney", "John Carney", member_i),
         member_j = ifelse(full_112_edge$member_j == "Jr. Carney", "John Carney", member_j),
         member_i = ifelse(full_112_edge$member_i == "Jr. Boustany", "Charles Boustany Jr.", member_i),
         member_j = ifelse(full_112_edge$member_j == "Jr. Boustany", "Charles Boustany Jr.", member_j),
         member_i = ifelse(full_112_edge$member_i == "Jr. Bishop", "Sanford D. Bishop Jr.", member_i),
         member_j = ifelse(full_112_edge$member_j == "Jr. Bishop", "Sanford D. Bishop Jr.", member_j),
         member_i = ifelse(full_112_edge$member_i == "Joseph R. Pitts", "Joe Pitts", member_i),
         member_j = ifelse(full_112_edge$member_j == "Joseph R. Pitts", "Joe Pitts", member_j),
         member_i = ifelse(full_112_edge$member_i == "Joseph J. Heck", "Joe Heck", member_i),
         member_j = ifelse(full_112_edge$member_j == "Joseph J. Heck", "Joe Heck", member_j),
         member_i = ifelse(full_112_edge$member_i == "John R. Carter", "John Carter", member_i),
         member_j = ifelse(full_112_edge$member_j == "John R. Carter", "John Carter", member_j),
         member_i = ifelse(full_112_edge$member_i == "John P. Sarbanes", "John Sarbanes", member_i),
         member_j = ifelse(full_112_edge$member_j == "John P. Sarbanes", "John Sarbanes", member_j),
         member_i = ifelse(full_112_edge$member_i == "John Abney Culberson", "John Culberson", member_i),
         member_j = ifelse(full_112_edge$member_j == "John Abney Culberson", "John Culberson", member_j),
         member_i = ifelse(full_112_edge$member_i == "John A. Yarmuth", "John Yarmuth", member_i),
         member_j = ifelse(full_112_edge$member_j == "John A. Yarmuth", "John Yarmuth", member_j),
         member_i = ifelse(full_112_edge$member_i == "Jeffrey M. Landry", "Jeff Landry", member_i),
         member_j = ifelse(full_112_edge$member_j == "Jeffrey M. Landry", "Jeff Landry", member_j),
         member_i = ifelse(full_112_edge$member_i == "Janice D. Schakowsky", "Jan Schakowsky", member_i),
         member_j = ifelse(full_112_edge$member_j == "Janice D. Schakowsky", "Jan Schakowsky", member_j),
         member_i = ifelse(full_112_edge$member_i == "James R. Langevin", "Jim Langevin", member_i),
         member_j = ifelse(full_112_edge$member_j == "James R. Langevin", "Jim Langevin", member_j),
         member_i = ifelse(full_112_edge$member_i == "James P. McGovern", "Jim McGovern", member_i),
         member_j = ifelse(full_112_edge$member_j == "James P. McGovern", "Jim McGovern", member_j),
         member_i = ifelse(full_112_edge$member_i == "James B. Renacci", "Jim Renacci", member_i),
         member_j = ifelse(full_112_edge$member_j == "James B. Renacci", "Jim Renacci", member_j),
         member_i = ifelse(full_112_edge$member_i == "James A. Himes", "Jim Himes", member_i),
         member_j = ifelse(full_112_edge$member_j == "James A. Himes", "Jim Himes", member_j),
         member_i = ifelse(full_112_edge$member_i == "Jaime Herrera Beutler", "Jaime Herrera", member_i),
         member_j = ifelse(full_112_edge$member_j == "Jaime Herrera Beutler", "Jaime Herrera", member_j),
         member_i = ifelse(full_112_edge$member_i == "II Rahall", "Nick J. Rahall II", member_i),
         member_j = ifelse(full_112_edge$member_j == "II Rahall", "Nick J. Rahall II", member_j),
         member_i = ifelse(full_112_edge$member_i == "Henry C. \"Hank,\" Jr. Johnson", "Hank Johnson", member_i),
         member_j = ifelse(full_112_edge$member_j == "Henry C. \"Hank,\" Jr. Johnson", "Hank Johnson", member_j),
         member_i = ifelse(full_112_edge$member_i == "H. Morgan Griffith", "Morgan Griffith", member_i),
         member_j = ifelse(full_112_edge$member_j == "H. Morgan Griffith", "Morgan Griffith", member_j),
         member_i = ifelse(full_112_edge$member_i == "Gus M. Bilirakis", "Gus Bilirakis", member_i),
         member_j = ifelse(full_112_edge$member_j == "Gus M. Bilirakis", "Gus Bilirakis", member_j),
         member_i = ifelse(full_112_edge$member_i == "Gary C. Peters", "Gary Peters", member_i),
         member_j = ifelse(full_112_edge$member_j == "Gary C. Peters", "Gary Peters", member_j),
         member_i = ifelse(full_112_edge$member_i == "G. K. Butterfield", "G.K. Butterfield", member_i),
         member_j = ifelse(full_112_edge$member_j == "G. K. Butterfield", "G.K. Butterfield", member_j),
         member_i = ifelse(full_112_edge$member_i == "Frederica S. Wilson", "Frederica Wilson", member_i),
         member_j = ifelse(full_112_edge$member_j == "Frederica S. Wilson", "Frederica Wilson", member_j),
         member_i = ifelse(full_112_edge$member_i == "Frank C. Guinta", "Frank Guinta", member_i),
         member_j = ifelse(full_112_edge$member_j == "Frank C. Guinta", "Frank Guinta", member_j),
         member_i = ifelse(full_112_edge$member_i == "Fortney Pete Stark", "Pete Stark", member_i),
         member_j = ifelse(full_112_edge$member_j == "Fortney Pete Stark", "Pete Stark", member_j),
         member_i = ifelse(full_112_edge$member_i == "Eric A. \"Rick\" Crawford", "Rick Crawford", member_i),
         member_j = ifelse(full_112_edge$member_j == "Eric A. \"Rick\" Crawford", "Rick Crawford", member_j),
         member_i = ifelse(full_112_edge$member_i == "E. Scott Rigell", "Scott Rigell", member_i),
         member_j = ifelse(full_112_edge$member_j == "E. Scott Rigell", "Scott Rigell", member_j),
         member_i = ifelse(full_112_edge$member_i == "Duncan D. Hunter", "Duncan Hunter", member_i),
         member_j = ifelse(full_112_edge$member_j == "Duncan D. Hunter", "Duncan Hunter", member_j),
         member_i = ifelse(full_112_edge$member_i == "Doris O. Matsui", "Doris Matsui", member_i),
         member_j = ifelse(full_112_edge$member_j == "Doris O. Matsui", "Doris Matsui", member_j),
         member_i = ifelse(full_112_edge$member_i == "Donna F. Edwards", "Donna Edwards", member_i),
         member_j = ifelse(full_112_edge$member_j == "Donna F. Edwards", "Donna Edwards", member_j),
         member_i = ifelse(full_112_edge$member_i == "Donald A. Manzullo", "Donald Manzullo", member_i),
         member_j = ifelse(full_112_edge$member_j == "Donald A. Manzullo", "Donald Manzullo", member_j),
         member_i = ifelse(full_112_edge$member_i == "Dennis A. Ross", "Dennis Ross", member_i),
         member_j = ifelse(full_112_edge$member_j == "Dennis A. Ross", "Dennis Ross", member_j),
         member_i = ifelse(full_112_edge$member_i == "Dennis A. Cardoza", "Dennis Cardoza", member_i),
         member_j = ifelse(full_112_edge$member_j == "Dennis A. Cardoza", "Dennis Cardoza", member_j),
         member_i = ifelse(full_112_edge$member_i == "David N. Cicilline", "David Cicilline", member_i),
         member_j = ifelse(full_112_edge$member_j == "David N. Cicilline", "David Cicilline", member_j),
         member_i = ifelse(full_112_edge$member_i == "David P. Roe", "Phil Roe", member_i),
         member_j = ifelse(full_112_edge$member_j == "David P. Roe", "Phil Roe", member_j),
         member_i = ifelse(full_112_edge$member_i == "David G. Reichert", "Dave Reichert", member_i),
         member_j = ifelse(full_112_edge$member_j == "David G. Reichert", "Dave Reichert", member_j),
         member_i = ifelse(full_112_edge$member_i == "David B. McKinley", "David McKinley", member_i),
         member_j = ifelse(full_112_edge$member_j == "David B. McKinley", "David McKinley", member_j),
         member_i = ifelse(full_112_edge$member_i == "Darrell E. Issa", "Darrell Issa", member_i),
         member_j = ifelse(full_112_edge$member_j == "Darrell E. Issa", "Darrell Issa", member_j),
         member_i = ifelse(full_112_edge$member_i == "Daniel E. Lungren", "Dan Lungren", member_i),
         member_j = ifelse(full_112_edge$member_j == "Daniel E. Lungren", "Dan Lungren", member_j),
         member_i = ifelse(full_112_edge$member_i == "Colleen W. Hanabusa", "Colleen Hanabusa", member_i),
         member_j = ifelse(full_112_edge$member_j == "Colleen W. Hanabusa", "Colleen Hanabusa", member_j),
         member_i = ifelse(full_112_edge$member_i == "Christopher P. Gibson", "Chris Gibson", member_i),
         member_j = ifelse(full_112_edge$member_j == "Christopher P. Gibson", "Chris Gibson", member_j),
         member_i = ifelse(full_112_edge$member_i == "Charles W. Dent", "Charlie Dent", member_i),
         member_j = ifelse(full_112_edge$member_j == "Charles W. Dent", "Charlie Dent", member_j),
         member_i = ifelse(full_112_edge$member_i == "Charles J. \"Chuck\" Fleischmann", "Chuck Fleischmann", member_i),
         member_j = ifelse(full_112_edge$member_j == "Charles J. \"Chuck\" Fleischmann", "Chuck Fleischmann", member_j),
         member_i = ifelse(full_112_edge$member_i == "Charles F. Bass", "Charles Bass", member_i),
         member_j = ifelse(full_112_edge$member_j == "Charles F. Bass", "Charles Bass", member_j),
         member_i = ifelse(full_112_edge$member_i == "Cedric L. Richmond", "Cedric Richmond", member_i),
         member_j = ifelse(full_112_edge$member_j == "Cedric L. Richmond", "Cedric Richmond", member_j),
         member_i = ifelse(full_112_edge$member_i == "C. W. Bill Young", "C.W. Bill Young", member_i),
         member_j = ifelse(full_112_edge$member_j == "C. W. Bill Young", "C.W. Bill Young", member_j),
         member_i = ifelse(full_112_edge$member_i == "C. A. Dutch Ruppersberger", "C.A. Dutch Ruppersberger", member_i),
         member_j = ifelse(full_112_edge$member_j == "C. A. Dutch Ruppersberger", "C.A. Dutch Ruppersberger", member_j),
         member_i = ifelse(full_112_edge$member_i == "Bruce L. Braley", "Bruce Braley", member_i),
         member_j = ifelse(full_112_edge$member_j == "Bruce L. Braley", "Bruce Braley", member_j),
         member_i = ifelse(full_112_edge$member_i == "Bennie G. Thompson", "Bennie Thompson", member_i),
         member_j = ifelse(full_112_edge$member_j == "Bennie G. Thompson", "Bennie Thompson", member_j),
         member_i = ifelse(full_112_edge$member_i == "Allen B. West", "Allen West", member_i),
         member_j = ifelse(full_112_edge$member_j == "Allen B. West", "Allen West", member_j),
         member_i = ifelse(full_112_edge$member_i == "Charles A. Gonzalez", "Charlie Gonzalez", member_i),
         member_j = ifelse(full_112_edge$member_j == "Charles A. Gonzalez", "Charlie Gonzalez", member_j),
         member_i = ifelse(full_112_edge$member_i == "Timothy J. Walz", "Tim Walz", member_i),
         member_j = ifelse(full_112_edge$member_j == "Timothy J. Walz", "Tim Walz", member_j),
         member_i = ifelse(full_112_edge$member_i == "Christopher J. Lee", "Christopher Lee", member_i),
         member_j = ifelse(full_112_edge$member_j == "Christopher J. Lee", "Christopher Lee", member_j),
         member_i = ifelse(full_112_edge$member_i == "III Manchin", "Joe Manchin III", member_i),
         member_j = ifelse(full_112_edge$member_j == "III Manchin", "Joe Manchin III", member_j),
         member_i = ifelse(full_112_edge$member_i == "Christopher Murphy", "Christopher S. Murphy", member_i),
         member_j = ifelse(full_112_edge$member_j == "Christopher Murphy", "Christopher S. Murphy", member_j),
         member_i = ifelse(full_112_edge$member_i == "Todd Russell Platts", "Todd R. Platts", member_i),
         member_j = ifelse(full_112_edge$member_j == "Todd Russell Platts", "Todd R. Platts", member_j),
         member_i = ifelse(full_112_edge$member_i == "Patrick Toomey", "Patrick J. Toomey", member_i),
         member_j = ifelse(full_112_edge$member_j == "Patrick Toomey", "Patrick J. Toomey", member_j),
         member_i = ifelse(full_112_edge$member_i == "Roger F. Wicker", "Roger Wicker", member_i),
         member_j = ifelse(full_112_edge$member_j == "Roger F. Wicker", "Roger Wicker", member_j),
         member_i = ifelse(full_112_edge$member_i == "Laura Richardson", "Laura  Richardson", member_i),
         member_j = ifelse(full_112_edge$member_j == "Laura Richardson", "Laura  Richardson", member_j),
         member_i = ifelse(full_112_edge$member_i == "Rush Holt", "Rush D. Holt", member_i),
         member_j = ifelse(full_112_edge$member_j == "Rush Holt", "Rush D. Holt", member_j),
         member_i = ifelse(full_112_edge$member_i == "Patrick Meehan", "Pat Meehan", member_i),
         member_j = ifelse(full_112_edge$member_j == "Patrick Meehan", "Pat Meehan", member_j),
         member_i = ifelse(full_112_edge$member_i == "Patrick Meehan", "Emanuel Cleaver II", member_i),
         member_j = ifelse(full_112_edge$member_j == "Patrick Meehan", "Emanuel Cleaver II", member_j),
         member_i = ifelse(full_112_edge$member_i == "David Loebsack", "Dave Loebsack", member_i),
         member_j = ifelse(full_112_edge$member_j == "David Loebsack", "Dave Loebsack", member_j),
         member_i = ifelse(full_112_edge$member_i == "Benjamin Quayle", "Ben Quayle", member_i),
         member_j = ifelse(full_112_edge$member_j == "Benjamin Quayle", "Ben Quayle", member_j),
         member_i = ifelse(full_112_edge$member_i == "Joe Barton", "Joe L. Barton", member_i),
         member_j = ifelse(full_112_edge$member_j == "Joe Barton", "Joe L. Barton", member_j),
         member_i = ifelse(full_112_edge$member_i == "Stevan Pearce", "Steve Pearce", member_i),
         member_j = ifelse(full_112_edge$member_j == "Stevan Pearce", "Steve Pearce", member_j),
         member_i = ifelse(full_112_edge$member_i == "Christopher Murphy", "Christopher S. Murphy", member_i),
         member_j = ifelse(full_112_edge$member_j == "Christopher Murphy", "Christopher S. Murphy", member_j),
         member_i = ifelse(full_112_edge$member_i == "Mac Thornberry", "William M. \"Mac\" Thornberry", member_i),
         member_j = ifelse(full_112_edge$member_j == "Mac Thornberry", "William M. \"Mac\" Thornberry", member_j),
         member_i = ifelse(full_112_edge$member_i == "Bob Goodlatte", "Robert W. Goodlatte", member_i),
         member_j = ifelse(full_112_edge$member_j == "Bob Goodlatte", "Robert W. Goodlatte", member_j),
         member_i = ifelse(full_112_edge$member_i == "Paul Ryan", "Paul D. Ryan", member_i),
         member_j = ifelse(full_112_edge$member_j == "Paul Ryan", "Paul D. Ryan", member_j),
         member_i = ifelse(full_112_edge$member_i == "Ed Whitfield", "Edward Whitfield", member_i),
         member_j = ifelse(full_112_edge$member_j == "Ed Whitfield", "Edward Whitfield", member_j),
         member_i = ifelse(full_112_edge$member_i == "Michael F. Bennet", "Michael Bennet", member_i),
         member_j = ifelse(full_112_edge$member_j == "Michael F. Bennet", "Michael Bennet", member_j),
         member_i = ifelse(full_112_edge$member_i == "Kirsten E. Gillibrand", "Kirsten Gillibrand", member_i),
         member_j = ifelse(full_112_edge$member_j == "Kirsten E. Gillibrand", "Kirsten Gillibrand", member_j),
         member_i = ifelse(full_112_edge$member_i == "Christopher A. Coons", "Chris Coons", member_i),
         member_j = ifelse(full_112_edge$member_j == "Christopher A. Coons", "Chris Coons", member_j),
         member_i = ifelse(full_112_edge$member_i == "John F. Kerry", "John Kerry", member_i),
         member_j = ifelse(full_112_edge$member_j == "John F. Kerry", "John Kerry", member_j),
         member_i = ifelse(full_112_edge$member_i == "Mike Crapo", "Michael D. Crapo", member_i),
         member_j = ifelse(full_112_edge$member_j == "Mike Crapo", "Michael D. Crapo", member_j),
         member_i = ifelse(full_112_edge$member_i == "IV Rockefeller", "John D. Rockefeller IV", member_i),
         member_j = ifelse(full_112_edge$member_j == "IV Rockefeller", "John D. Rockefeller IV", member_j),
         member_i = ifelse(full_112_edge$member_i == "Emanuel Cleaver", "Emanuel Cleaver II", member_i),
         member_j = ifelse(full_112_edge$member_j == "Emanuel Cleaver", "Emanuel Cleaver II", member_j),
         member_i = ifelse(full_112_edge$member_i == "James E. Risch", "Jim Risch", member_i),
         member_j = ifelse(full_112_edge$member_j == "James E. Risch", "Jim Risch", member_j),
         member_i = ifelse(full_112_edge$member_i == "Mark L. Pryor", "Mark Pryor", member_i),
         member_j = ifelse(full_112_edge$member_j == "Mark L. Pryor", "Mark Pryor", member_j),
         member_i = ifelse(full_112_edge$member_i == "Mark R. Warner", "Mark Warner", member_i),
         member_j = ifelse(full_112_edge$member_j == "Mark R. Warner", "Mark Warner", member_j),
         member_i = ifelse(full_112_edge$member_i == "Richard Burr", "Richard M. Burr", member_i),
         member_j = ifelse(full_112_edge$member_j == "Richard Burr", "Richard M. Burr", member_j),
         member_i = ifelse(full_112_edge$member_i == "Chuck Grassley", "Charles E. Grassley", member_i),
         member_j = ifelse(full_112_edge$member_j == "Chuck Grassley", "Charles E. Grassley", member_j),
         member_i = ifelse(full_112_edge$member_i == "Daniel Coats", "Dan Coats", member_i),
         member_j = ifelse(full_112_edge$member_j == "Daniel Coats", "Dan Coats", member_j),
         member_i = ifelse(full_112_edge$member_i == "Anthony D. Weiner", "Anthony Weiner", member_i),
         member_j = ifelse(full_112_edge$member_j == "Anthony D. Weiner", "Anthony Weiner", member_j),
         member_i = ifelse(full_112_edge$member_i == "Jr. Jones", "Walter B. Jones", member_i),
         member_j = ifelse(full_112_edge$member_j == "Jr. Jones", "Walter B. Jones", member_j),
         member_i = ifelse(full_112_edge$member_i == "Olympia J. Sen. Snowe", "Olympia J. Snowe", member_i),
         member_j = ifelse(full_112_edge$member_j == "Olympia J. Sen. Snowe", "Olympia J. Snowe", member_j),
         member_i = ifelse(full_112_edge$member_i == "Richard Sen. Blumenthal", "Richard Blumenthal", member_i),
         member_j = ifelse(full_112_edge$member_j == "Richard Sen. Blumenthal", "Richard Blumenthal", member_j),
         member_i = ifelse(full_112_edge$member_i == "Robert Sen. Menendez", "Robert Menendez", member_i),
         member_j = ifelse(full_112_edge$member_j == "Robert Sen. Menendez", "Robert Menendez", member_j),
         member_i = ifelse(full_112_edge$member_i == "Michael F. Sen. Bennet", "Michael Bennet", member_i),
         member_j = ifelse(full_112_edge$member_j == "Michael F. Sen. Bennet", "Michael Bennet", member_j),
         member_i = ifelse(full_112_edge$member_i == "Amy Sen. Klobuchar", "Amy Klobuchar", member_i),
         member_j = ifelse(full_112_edge$member_j == "Amy Sen. Klobuchar", "Amy Klobuchar", member_j),
         member_i = ifelse(full_112_edge$member_i == "Susan M. Sen. Collins", "Susan Collins", member_i),
         member_j = ifelse(full_112_edge$member_j == "Susan M. Sen. Collins", "Susan Collins", member_j),
         member_i = ifelse(full_112_edge$member_i == "Kay R. Hagan", "Kay Hagan", member_i),
         member_j = ifelse(full_112_edge$member_j == "Kay R. Hagan", "Kay Hagan", member_j))

full_112_edge[full_112_edge == "Congregationalist"] <- "Protestant"


```

# Merging the 112th full with the religion!!

THERE ARE 535 PEOPLE in the 112th religion dataset so we need that many

```{r}
#now we have something that has the first senators religion
t_112_first <- full_join(rel_112, full_112_edge, by = c("member_name" = "member_i")) 

#remove all the NAs
t_112_first <- t_112_first %>% 
  drop_na(fix_relig)

#rename so we have a name i and a religion i 
#and only select the i's
t_112_first <- t_112_first %>% 
  rename("religion_i" = "fix_relig",
         "member_i" = "member_name") %>% 
  select("member_i", "religion_i", "member_j")

#now we have something that has the second senators religion
t_112_all <- full_join(rel_112, t_112_first, by = c("member_name" = "member_j"))

#this should include isolates? but now want to remove them?
t_112_all <- t_112_all %>% 
  rename("member_j" = 1,
         "religion_j" = 2,
         "member_i" = 3,
         "religion_i" = 4)

t_112_all <- t_112_all %>% 
  drop_na(religion_j)

#count the number of NAs
#sum(is.na(all_112$religion_i))
#sum(is.na(all_112$religion_j))

#checking which ones are NAs
#all_112 %>% 
  #distinct(member_j, .keep_all = TRUE)

#create similarity score!! yay!!
t_112_all$similarity<- ifelse(t_112_all$religion_i == t_112_all$religion_j, 1, 0)

#trying to remove the ones where the member is the same member!! 
#all done!!
#all_112 <- all_112[all_112$member_i != all_112$member_j, ]   
t_112_all <- t_112_all[t_112_all$member_i != t_112_all$member_j, ]   

t_112_all <- t_112_all %>% 
  drop_na(religion_i)


#check how many unknowns we got
#remove all the duplicates and check the number of unknowns
#all_112 %>% 
 # distinct(member_i, .keep_all = TRUE) %>% 
  #group_by(religion_j) %>% 
  #summarize(n = n())

#currently have 6 people without any religious information, we are going to remove them
#also remove all the ones where they are duplicated
#all_112 <- all_112 %>%
#  drop_na(religion_i) %>% 
#  drop_na(religion_j)
```

# NOW THAT WE HAVE THE EDGE LISTS we need to make a MATRIX of 112

```{r}
#now we just want the member names
t_112 <- t_112_all %>% 
  select(member_i, member_j)
#now we need to add in isolates since our adjacency only includes 535 members and our religion includes 538
#the no duplicates of i
noDup_i <- t_112 %>% 
  select(member_i) %>% 
  distinct(member_i, .keep_all = TRUE)

#the no duplicates of j
noDup_j <- t_112 %>% 
  select(member_j) %>% 
  distinct(member_j, .keep_all = TRUE)

t_112 %>% 
  distinct()

```

# check my isos n stuff

```{r}
#checking isolates that need to be added back to 112th
i <- anti_join(rel_112, noDup_i, by = c("member_name" = "member_i"))
#checking isolates that need to be added back
j <- anti_join(rel_112, noDup_j, by = c("member_name" = "member_j"))

#adding the new isos:
newrow_9 = c(member_i = "John Ensign", member_j = NA)
newrow_10 = c(member_i = "Kelly Ayotte", member_j = NA)
newrow_11 = c(member_i = "Robert Menendez", member_j = NA)
newrow_12 = c(member_i = "Charles E. Schumer", member_j = NA)
newrow_13 = c(member_i = "Kay Hagan", member_j = NA)
newrow_14 = c(member_i = "Kent Conrad", member_j = NA)
newrow_15 = c(member_i = "Bob Casey", member_j = NA)
newrow_16 = c(member_i = "Jim Webb", member_j = NA)
newrow_17 = c(member_i = "Joe Manchin III", member_j = NA)
newrow_18 = c(member_i = "Herb Kohl", member_j = NA)
newrow_19 = c(member_i = "Robert B. Aderholt", member_j = NA)
newrow_20 = c(member_i = "Gabrielle Giffords", member_j = NA)
newrow_21 = c(member_i = "David Dreier", member_j = NA)
newrow_22 = c(member_i = "Jane Harman", member_j = NA)
newrow_23 = c(member_i = "Nancy Pelosi", member_j = NA)
newrow_24 = c(member_i = "Peter J. Visclosky", member_j = NA)
newrow_25 = c(member_i = "Dave Camp", member_j = NA)
newrow_26 = c(member_i = "Christopher Lee", member_j = NA)
newrow_27 = c(member_i = "Anthony Weiner", member_j = NA)
newrow_28 = c(member_i = "John A. Boehner", member_j = NA)
newrow_29 = c(member_i = "Pat Meehan", member_j = NA)
newrow_30 = c(member_i = "Charlie Gonzalez", member_j = NA)
newrow_31 = c(member_i = "Eric Cantor", member_j = NA)
newrow_32 = c(member_i = "Doc Hastings", member_j = NA)

newrow_33 = c(member_i = NA, member_j = "Richard J. Durbin")
newrow_34 = c(member_i = NA, member_j = "John Ensign")
newrow_35 = c(member_i = NA, member_j = "Harry Reid")
newrow_36 = c(member_i = NA, member_j = "Bob Casey")
newrow_37 = c(member_i = NA, member_j = "Lindsey Graham")
newrow_38 = c(member_i = NA, member_j = "John D. Rockefeller IV")
newrow_39 = c(member_i = NA, member_j = "Gabrielle Giffords")
newrow_40 = c(member_i = NA, member_j = "Jim Costa")
newrow_41 = c(member_i = NA, member_j = "Jane Harman")
newrow_42 = c(member_i = NA, member_j = "Justin Amash")
newrow_43 = c(member_i = NA, member_j = "Chris Gibson")
newrow_44 = c(member_i = NA, member_j = "John A. Boehner")
newrow_45 = c(member_i = NA, member_j = "Pat Meehan")
newrow_46 = c(member_i = NA, member_j = "Ron Paul")
newrow_47 = c(member_i = NA, member_j = "Eric Cantor")

#adding them
t_112 = rbind(t_112, newrow_9, newrow_10, newrow_11, newrow_12, newrow_13, newrow_14, newrow_15, newrow_16, newrow_17, newrow_18, newrow_19, newrow_20, newrow_21, newrow_22, newrow_23, newrow_24, newrow_25, newrow_26, newrow_27, newrow_28, newrow_29, newrow_30, newrow_31, newrow_32, newrow_33, newrow_34, newrow_35, newrow_36, newrow_37, newrow_38, newrow_39, newrow_40, newrow_41, newrow_42, newrow_43, newrow_44, newrow_45, newrow_46, newrow_47)

yee_112 <- t_112

#now we need to see how many distinct there are bc we have too many somehow
#there are 536
noDup_i <- yee_112 %>% 
  select(member_i) %>% 
  distinct(member_i, .keep_all = TRUE) %>% 
  drop_na(member_i)

#okay there is a correct number here 535
noDup_j <- yee_112 %>% 
  select(member_j) %>% 
  distinct(member_j, .keep_all = TRUE) %>% 
  drop_na(member_j)

#now joining them all and getting 540 observations
reeeee<- full_join(noDup_i, noDup_j, by = c("member_i" = "member_j"))

#now merge again with religion to see what is missing
#wait this has 535?
ahhhhh <- full_join(reeeee, rel_112, by = c("member_i" = "member_name"))
```

# Now using thse to figure out whats missing:

```{r}
#remove: Mark E. Amodei
#	Janice Hahn
# Suzanne Bonamici
#Robert L. Turner
#Kathleen C. Hochul

#okay this ones okay doenst fuck anything up 
yee_112 <- yee_112[yee_112$member_i != "Mark E. Amodei", ]   
yee_112 <- yee_112[yee_112$member_i != "Janice Hahn", ]
yee_112 <- yee_112[yee_112$member_i != "Suzanne Bonamici", ]
yee_112 <- yee_112[yee_112$member_i != "Robert L. Turner", ]
yee_112 <- yee_112[yee_112$member_i != "Kathleen C. Hochul", ]

```

# FINAL EDGE LIST TURNED TO MATRIX 112

```{r}
#now we need to turn our edge list into a weighted edge list
#turn edge list into matrix
el_12=as.matrix(yee_112)

#turn into graph object
g_12=graph.data.frame(el_12)

#it should be 535 but its 541
#fuck we removed some and it fucked everything up now were down to 529?? what
#get adjacency matrix
d = get.adjacency(g_12,sparse=FALSE)
d <- d[-c(532), -c(532)]

#export it for easier work!
write.csv(d, "adjacency_cospons_112.csv", row.names=FALSE)
```

# Exporting the data as csv's so that we may actually use it!

```{r}
#export 112th 
write.csv(a_112, "edge_listall_112.csv", row.names=FALSE)

#no duplicate connections:
noDup <- all_112 %>% 
  distinct(member_j, member_i, .keep_all = TRUE)
```

# Religion 112th congress

```{r}
#make matrix of religions
#making a number correlation for each lmao
re_112 <- rel_112 %>% 
  mutate(fix_relig = ifelse(rel_112$fix_relig == "Catholic", 1, fix_relig),
         fix_relig = ifelse(rel_112$fix_relig == "Jewish", 2, fix_relig),
         fix_relig = ifelse(rel_112$fix_relig == "Other", 3, fix_relig),
         fix_relig = ifelse(rel_112$fix_relig == "Protestant", 4, fix_relig),
         fix_relig = ifelse(rel_112$fix_relig == "Unknown", 5, fix_relig))  

#making an i and j 
re_112 <- re_112 %>% 
  mutate(member_i=member_name) %>% 
  rename(member_j = member_name) %>% 
  mutate(religion_i = fix_relig) %>% 
  rename(religion_j = fix_relig)

#creating all the possible combinations
combos <- re_112 |>
  expand(member_i, member_j) |>
  filter(member_i != member_j) 

#merge back in religion
combos_rel <- combos %>% 
  right_join(re_112, by = c("member_i" = "member_i")) %>% 
  select(member_i, member_j.x, religion_i)

#merge religion of j
combos_rel <- combos_rel %>% 
  right_join(re_112, by = c("member_j.x" = "member_j")) 

#select the correct ones
combos_112 <- combos_rel %>% 
  select(member_i.x, member_j.x, religion_i.x, religion_j) %>% 
  rename(member_i =member_i.x,
         member_j = member_j.x,
         religion_i = religion_i.x)

#create similarity score
combos_112 <- combos_112 %>% 
  mutate(similarity = ifelse(religion_i == religion_j, 1, 0 )) %>% 
  select(-religion_i, -religion_j)

#now we only want to include the ones that include the same? 
sim_combos <-combos_112[!combos_112$similarity==0 ,]


#turn edge list into matrix
el_112 =as.matrix(combos_112)

#turn into graph object
g_112=graph.data.frame(sim_combos)

#get adjacency matrix
d_112 = get.adjacency(g_112,sparse=FALSE) 
 
#changing it so all of them are zeros


#export it for easier work!
write.csv(d_112, "religion_112.csv", row.names=FALSE)
```

# Matrix for party 112

```{r}
#realizing that the last three pages didnt go through
#fixed yay!
pa_112 <- relig_112_all %>% 
  select(member_name, party)

#independents are 
#Joseph I. Lieberman
#and bernie so changing to democrat
pa_112 <- pa_112 %>% 
  mutate(party = ifelse(party == "R", 1, 0))

#making an i and j 
pa_112 <- pa_112 %>% 
  mutate(member_i=member_name) %>% 
  rename(member_j = member_name) %>% 
  mutate(party_i = party) %>% 
  rename(party_j = party)

#creating all the possible combinations
combos <- pa_112 |>
  expand(member_i, member_j) |>
  filter(member_i != member_j) 

#merge back in religion
combos_rel_112 <- combos %>% 
  right_join(pa_112, by = c("member_i" = "member_i"))  %>% 
  select(member_i, member_j.x, party_i)

#merge religion of j
combos_rel <- combos_rel_112 %>% 
  right_join(pa_112, by = c("member_j.x" = "member_j")) 

#select the correct ones
combos_112 <- combos_rel %>% 
  select(member_i.x, member_j.x, party_i.x, party_j) %>% 
  rename(member_i =member_i.x,
         member_j = member_j.x,
         party_i = party_i.x)

#create similarity score
combos_112 <- combos_112 %>% 
  mutate(similarity = ifelse(party_i == party_j, 1, 0 )) %>% 
  select(-party_i, -party_j)

#now we only want to include the ones that include the same? 
sim_combos <-combos_112[!combos_112$similarity==0 ,]


#turn edge list into matrix
el_112 =as.matrix(sim_combos)

#turn into graph object
g_112=graph.data.frame(sim_combos)

#get adjacency matrix
d_112 = get.adjacency(g_112,sparse=FALSE) 
 
#changing it so all of them are zeros


#export it for easier work!
write.csv(d_112, "matrix_party_112.csv", row.names=FALSE)


```
